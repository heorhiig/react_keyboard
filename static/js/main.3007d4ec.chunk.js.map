{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","useEffect","document","addEventListener","event","className","length","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAYA,OAVAC,qBAAU,WAOR,OAFAC,SAASC,iBAAiB,SAJD,SAACC,GACxBJ,EAAOI,EAAML,QAKR,eACN,IAGD,qBAAKM,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGN,EAAIO,OAAS,EAAb,mCAC+BP,EAD/B,KAEG,+B,MCfZQ,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.3007d4ec.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  useEffect(() => {\n    const handlePressedKey = (event: KeyboardEvent) => {\n      setKey(event.key);\n    };\n\n    document.addEventListener('keyup', handlePressedKey);\n\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {key.length > 0\n          ? `The last pressed key is [${key}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}