{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handlePressedKey","event","preventDefault","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,MAFT,EAaEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKC,SAAS,CAAEJ,IAAKE,EAAMF,OAf/B,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAkBE,WACE,IAAQD,EAAQO,KAAKR,MAAbC,IAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIF,KAAKR,MAAMC,IAAZ,mCAE+BA,EAF/B,KACG,kCAzBd,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.3ed0e74b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    key: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    event.preventDefault();\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!this.state.key\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${key}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}